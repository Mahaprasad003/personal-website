import React, { useState, useEffect } from 'react';
import { useParams, useNavigate } from 'react-router-dom';
import SimpleHeader from '../components/SimpleHeader';
import { loadBlogPosts } from '../utils/dataLoader';

const BlogPostPage = () => {
  const [post, setPost] = useState(null);
  const [loading, setLoading] = useState(true);
  const { slug } = useParams();
  const navigate = useNavigate();
  
  useEffect(() => {
    const fetchPost = async () => {
      try {
        const posts = await loadBlogPosts();
        // Find the post that matches the current URL
        const currentPost = posts.find(p => {
          // Extract slug from URL or use ID if needed
          const postSlug = p.url.split('/').pop();
          return postSlug === slug;
        });
        
        if (currentPost) {
          setPost(currentPost);
        } else {
          // If post not found, redirect to blog listing
          navigate('/blog');
        }
        setLoading(false);
      } catch (error) {
        console.error('Error loading blog post:', error);
        setLoading(false);
      }
    };
    
    fetchPost();
  }, [slug, navigate]);
  
  if (loading) {
    return (
      <div className="blog-post-page fade-in">
        <SimpleHeader />
        <div className="container">
          <div className="loading">Loading post...</div>
        </div>
      </div>
    );
  }
  
  if (!post) {
    return (
      <div className="blog-post-page fade-in">
        <SimpleHeader />
        <div className="container">
          <div className="not-found">Post not found</div>
        </div>
      </div>
    );
  }
  
  return (
    <div className="blog-post-page fade-in">
      <SimpleHeader />
      
      <div className="container">
        <article className="blog-post-content">
          <header className="post-header">
            <h1>{post.title}</h1>
            <time className="post-date">{post.date}</time>
          </header>
          
          {post.featuredImage && (
            <div className="featured-image">
              <img src={post.featuredImage} alt={post.title} />
            </div>
          )}
          
          <div className="post-body" dangerouslySetInnerHTML={{ __html: post.content }} />
        </article>
      </div>
      
      <style jsx>{`
        .blog-post-page {
          padding-bottom: 4rem;
        }
        
        .container {
          max-width: 800px;
          margin: 0 auto;
          padding: 0 1.5rem;
        }
        
        .loading, .not-found {
          text-align: center;
          padding: 4rem 0;
          color: var(--text-secondary);
          font-style: italic;
        }
        
        .blog-post-content {
          margin-top: 2rem;
        }
        
        .post-header {
          margin-bottom: 2rem;
        }
        
        h1 {
          font-size: 2.75rem;
          margin-bottom: 0.75rem;
          font-weight: 700;
        }
        
        .post-date {
          color: var(--text-secondary);
          font-size: 0.95rem;
          font-style: italic;
        }
        
        .featured-image {
          margin: 2rem 0;
        }
        
        .featured-image img {
          max-width: 100%;
          height: auto;
          border-radius: 6px;
        }
        
        .post-body {
          font-size: 1.05rem;
          line-height: 1.8;
        }
        
        .post-body p {
          margin-bottom: 1.5rem;
        }
        
        .post-body h2 {
          font-size: 1.75rem;
          margin: 2.5rem 0 1rem;
          color: var(--text-primary);
        }
        
        .post-body h3 {
          font-size: 1.4rem;
          margin: 2rem 0 1rem;
          color: var(--text-primary);
        }
        
        .post-body img {
          max-width: 100%;
          height: auto;
          border-radius: 6px;
          margin: 1.5rem 0;
        }
        
        .post-body ul, .post-body ol {
          margin-bottom: 1.5rem;
          padding-left: 1.5rem;
        }
        
        .post-body li {
          margin-bottom: 0.5rem;
        }
        
        @media (max-width: 768px) {
          .container {
            padding: 0 1rem;
          }
          
          h1 {
            font-size: 2rem;
          }
          
          .post-body {
            font-size: 1rem;
          }
        }
      `}</style>
    </div>
  );
};

export default BlogPostPage;